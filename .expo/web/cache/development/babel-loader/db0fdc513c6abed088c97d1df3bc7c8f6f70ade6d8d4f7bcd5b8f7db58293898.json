{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { SLIDER_WIDTH, ITEM_WIDTH } from \"../code/carouselCardItem\";\nimport { decks } from \"../code/data\";\nimport Flashcard from \"../code/flashcards\";\nimport CarouselCards from \"../code/carouselCards\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Search(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    searchText = _React$useState2[0],\n    setSearchText = _React$useState2[1];\n  var handleClear = function handleClear() {\n    setSearchText('');\n  };\n  var filterDecks = function filterDecks() {\n    return decks.filter(function (deck) {\n      return deck.name.toLowerCase().includes(searchText.toLowerCase()) || deck.author.toLowerCase().includes(searchText.toLowerCase()) || deck.code.toLowerCase().includes(searchText.toLowerCase()) || deck.course.toLowerCase().includes(searchText.toLowerCase()) || deck.school.toLowerCase().includes(searchText.toLowerCase());\n    });\n  };\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.SearchContainer,\n    children: [_jsxs(View, {\n      style: styles.SearchBar,\n      children: [_jsx(Icon, {\n        name: \"search-outline\",\n        style: styles.searchIcon\n      }), _jsx(TextInput, {\n        style: {\n          flex: 1,\n          margin: 10,\n          marginLeft: 5,\n          fontSize: 16\n        },\n        placeholder: \"Search\",\n        value: searchText,\n        onChangeText: function onChangeText(text) {\n          return setSearchText(text);\n        }\n      }), searchText ? _jsx(TouchableOpacity, {\n        onPress: handleClear,\n        style: styles.closeIconContainer,\n        children: _jsx(Icon, {\n          name: \"close-outline\",\n          style: styles.closeIcon\n        })\n      }) : null]\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.l1,\n        children: \"Try searching your school!\"\n      })\n    }), _jsx(ScrollView, {\n      children: filterDecks().map(function (deck) {\n        return _jsx(View, {}, deck.id);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  SearchContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  SearchBar: {\n    margin: 10,\n    height: 50,\n    width: '80%',\n    top: -335,\n    backgroundColor: '#ece3ce',\n    borderRadius: 50,\n    flexDirection: 'row',\n    borderColor: '#000',\n    borderWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  searchIcon: {\n    marginLeft: 10,\n    marginRight: 5,\n    color: '#527746',\n    fontSize: 30\n  },\n  closeIconContainer: {\n    padding: 8\n  },\n  closeIcon: {\n    color: '#527746',\n    fontSize: 30\n  },\n  l1: {\n    fontSize: 12,\n    letterSpacing: 1,\n    fontWeight: '30',\n    color: '#ece3ce',\n    textAlign: 'left',\n    width: 295,\n    height: 23,\n    left: 20,\n    margin: 10,\n    top: -330,\n    left: -25\n  }\n});","map":{"version":3,"names":["React","ImageBackground","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","Icon","SLIDER_WIDTH","ITEM_WIDTH","decks","Flashcard","CarouselCards","jsx","_jsx","jsxs","_jsxs","Search","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","searchText","setSearchText","handleClear","filterDecks","filter","deck","name","toLowerCase","includes","author","code","course","school","source","require","style","styles","SearchContainer","children","SearchBar","searchIcon","flex","margin","marginLeft","fontSize","placeholder","value","onChangeText","text","onPress","closeIconContainer","closeIcon","l1","map","id","create","alignItems","justifyContent","height","width","top","backgroundColor","borderRadius","flexDirection","borderColor","borderWidth","marginRight","color","padding","letterSpacing","fontWeight","textAlign","left"],"sources":["C:/Users/Mark/learningrn/navigation/screens/SearchScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { ImageBackground, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\n\r\nimport { SLIDER_WIDTH, ITEM_WIDTH } from '../code/carouselCardItem';\r\nimport { decks } from '../code/data';\r\nimport Flashcard from '../code/flashcards';\r\nimport CarouselCards from '../code/carouselCards';\r\n\r\nexport default function Search({ navigation }) {\r\n  const [searchText, setSearchText] = React.useState('');\r\n\r\n  const handleClear = () => {\r\n    setSearchText('');\r\n  };\r\n\r\n  // Function to filter decks based on search text\r\n  const filterDecks = () => {\r\n    return decks.filter(\r\n      (deck) =>\r\n        deck.name.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        deck.author.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        deck.code.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        deck.course.toLowerCase().includes(searchText.toLowerCase()) ||\r\n        deck.school.toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../assets/JungleBg.gif')}\r\n      style={styles.SearchContainer}>\r\n      <View style={styles.SearchBar}>\r\n        <Icon name='search-outline' style={styles.searchIcon} />\r\n        <TextInput\r\n          style={{ flex: 1, margin: 10, marginLeft: 5, fontSize: 16 }}\r\n          placeholder='Search'\r\n          value={searchText}\r\n          onChangeText={(text) => setSearchText(text)}\r\n        />\r\n        {searchText ? (\r\n          <TouchableOpacity onPress={handleClear} style={styles.closeIconContainer}>\r\n            <Icon name='close-outline' style={styles.closeIcon} />\r\n          </TouchableOpacity>\r\n        ) : null}\r\n      </View>\r\n      <View>\r\n        <Text style={styles.l1}>Try searching your school!</Text>\r\n      </View>\r\n      <ScrollView>\r\n        {/* Map through the filtered decks and render them */}\r\n        {filterDecks().map((deck) => (\r\n          <View key={deck.id}>\r\n            {/* Render your deck component here */}\r\n            {/* For example, you can render a Flashcard or CarouselCards component */}\r\n            {/* <Flashcard deck={deck} /> */}\r\n            {/* <CarouselCards deck={deck} /> */}\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  SearchContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  SearchBar: {\r\n    margin: 10,\r\n    height: 50,\r\n    width: '80%',\r\n    top: -335,\r\n    backgroundColor: '#ece3ce',\r\n    borderRadius: 50,\r\n    flexDirection: 'row',\r\n    borderColor: '#000',\r\n    borderWidth: 1,\r\n    alignItems: 'center', \r\n    justifyContent: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginLeft: 10,\r\n    marginRight: 5,\r\n    color: '#527746',\r\n    fontSize: 30,\r\n  },\r\n  closeIconContainer: {\r\n    padding: 8,\r\n  },\r\n  closeIcon: {\r\n    color: '#527746',\r\n    fontSize: 30,\r\n  },\r\n  l1: {\r\n    fontSize: 12,\r\n    letterSpacing: 1,\r\n    fontWeight: '30',\r\n    color: '#ece3ce',\r\n    textAlign: 'left',\r\n    width: 295,\r\n    height: 23,\r\n    left: 20,\r\n    margin: 10,\r\n    top: -330,\r\n    left: -25\r\n  },\r\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}