{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Create(_ref) {\n  var navigation = _ref.navigation;\n  var _React$useState = React.useState(''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    title = _React$useState2[0],\n    setTitle = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    subjectCode = _React$useState4[0],\n    setSubjectCode = _React$useState4[1];\n  var _React$useState5 = React.useState(''),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    selectedCourse = _React$useState6[0],\n    setSelectedCourse = _React$useState6[1];\n  var _React$useState7 = React.useState(''),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    selectedSchool = _React$useState8[0],\n    setSelectedSchool = _React$useState8[1];\n  var _React$useState9 = React.useState(''),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    selectedCategory = _React$useState10[0],\n    setSelectedCategory = _React$useState10[1];\n  var courses = ['Actuarial Science', 'Applied Mathematics', 'Chemical Engineering', 'Computer Science', 'Petroleum Engineering', 'Physics'];\n  var schools = ['Adamson University', 'Far Eastern University', 'University of the East'];\n  var categories = ['Business and Economics', 'Communications and Media', 'Computer Science', 'Engineering', 'Health Sciences', 'Mathematics and Statistics', 'Natural Sciences', 'Social Sciences', 'Others'];\n  return _jsxs(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.CreateContainer,\n    children: [_jsx(Text, {\n      style: styles.letsGetInto1,\n      children: \"Let\\u2019s get into the (wood) work!\"\n    }), _jsxs(View, {\n      style: styles.titlecontainer,\n      children: [_jsx(Text, {\n        style: styles.modalTitle,\n        children: \"Title\"\n      }), _jsx(TextInput, {\n        style: styles.modalInput,\n        placeholder: \"Enter title\",\n        value: title,\n        onChangeText: function onChangeText(text) {\n          return setTitle(text);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.titlecontainer,\n      children: [_jsx(Text, {\n        style: styles.modalTitle,\n        children: \"Subject Code\"\n      }), _jsx(TextInput, {\n        style: styles.modalInput,\n        placeholder: \"Enter subject code\",\n        value: subjectCode,\n        onChangeText: function onChangeText(text) {\n          return setSubjectCode(text.replace(/[^a-zA-Z0-9]/g, ''));\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.titlecontainer,\n      children: [_jsx(Text, {\n        style: styles.modalTitle,\n        children: \"Course\"\n      }), _jsx(Picker, {\n        style: styles.modalInput,\n        selectedValue: selectedCourse,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedCourse(itemValue);\n        },\n        children: courses.map(function (course, index) {\n          return _jsx(Picker.Item, {\n            label: course,\n            value: course\n          }, index);\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.titlecontainer,\n      children: [_jsx(Text, {\n        style: styles.modalTitle,\n        children: \"School\"\n      }), _jsx(Picker, {\n        style: styles.modalInput,\n        selectedValue: selectedSchool,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedSchool(itemValue);\n        },\n        children: schools.map(function (school, index) {\n          return _jsx(Picker.Item, {\n            label: school,\n            value: school\n          }, index);\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.titlecontainer,\n      children: [_jsx(Text, {\n        style: styles.modalTitle,\n        children: \"Category\"\n      }), _jsx(Picker, {\n        style: styles.modalInput,\n        selectedValue: selectedCategory,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return setSelectedCategory(itemValue);\n        },\n        children: categories.map(function (category, index) {\n          return _jsx(Picker.Item, {\n            label: category,\n            value: category\n          }, index);\n        })\n      })]\n    }), _jsx(View, {\n      children: _jsx(Text, {\n        style: styles.additionalTitle,\n        children: \"If your school is not listed as an option, please request its addition by contacting the administrators at grovecards@gmail.com.\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  CreateContainer: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    resizeMode: 'cover'\n  },\n  letsGetInto1: {\n    top: 20,\n    alignSelf: 'center',\n    fontSize: 15,\n    letterSpacing: 1.6,\n    fontWeight: '700',\n    color: '#fff',\n    textAlign: 'center',\n    height: 33\n  },\n  titlecontainer: {\n    top: 20,\n    padding: 10\n  },\n  modalTitle: {\n    fontSize: 20,\n    color: '#ECE3CE',\n    paddingBottom: 10\n  },\n  modalInput: {\n    height: 50,\n    borderStyle: 'solid',\n    borderColor: '#ece3ce',\n    borderRadius: 5,\n    borderWidth: 1,\n    width: '90%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n  additionalTitle: {\n    fontSize: 20,\n    color: '#ECE3CE',\n    top: 75\n  }\n});","map":{"version":3,"names":["React","ImageBackground","Picker","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","jsx","_jsx","jsxs","_jsxs","Create","_ref","navigation","_React$useState","useState","_React$useState2","_slicedToArray","title","setTitle","_React$useState3","_React$useState4","subjectCode","setSubjectCode","_React$useState5","_React$useState6","selectedCourse","setSelectedCourse","_React$useState7","_React$useState8","selectedSchool","setSelectedSchool","_React$useState9","_React$useState10","selectedCategory","setSelectedCategory","courses","schools","categories","source","require","style","styles","CreateContainer","children","letsGetInto1","titlecontainer","modalTitle","modalInput","placeholder","value","onChangeText","text","replace","selectedValue","onValueChange","itemValue","itemIndex","map","course","index","Item","label","school","category","additionalTitle","create","flex","justifyContent","resizeMode","top","alignSelf","fontSize","letterSpacing","fontWeight","color","textAlign","height","padding","paddingBottom","borderStyle","borderColor","borderRadius","borderWidth","width","flexDirection","alignItems","paddingHorizontal","paddingVertical"],"sources":["C:/Users/Mark/learningrn/navigation/screens/CreateScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { ImageBackground, Picker, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function Create({ navigation }) {\r\n  const [title, setTitle] = React.useState('');\r\n  const [subjectCode, setSubjectCode] = React.useState('');\r\n  const [selectedCourse, setSelectedCourse] = React.useState('');\r\n  const [selectedSchool, setSelectedSchool] = React.useState('');\r\n  const [selectedCategory, setSelectedCategory] = React.useState('');\r\n\r\n  // Dummy data, replace with your actual data\r\n  const courses = [\r\n    'Actuarial Science',\r\n    'Applied Mathematics',\r\n    'Chemical Engineering',\r\n    'Computer Science',\r\n    'Petroleum Engineering',\r\n    'Physics',\r\n  ];\r\n  const schools = [\r\n    'Adamson University',\r\n    'Far Eastern University',\r\n    'University of the East',\r\n  ];\r\n  const categories = [\r\n    'Business and Economics',\r\n    'Communications and Media',\r\n    'Computer Science',\r\n    'Engineering',\r\n    'Health Sciences',\r\n    'Mathematics and Statistics',\r\n    'Natural Sciences',\r\n    'Social Sciences',\r\n    'Others'\r\n  ];\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../assets/JungleBg.gif')}\r\n      style={styles.CreateContainer}\r\n    >\r\n      <Text style={styles.letsGetInto1}>Letâ€™s get into the (wood) work!</Text>\r\n\r\n      <View style={styles.titlecontainer}>\r\n        <Text style={styles.modalTitle}>Title</Text>\r\n        <TextInput\r\n          style={styles.modalInput}\r\n          placeholder=\"Enter title\"\r\n          value={title}\r\n          onChangeText={(text) => setTitle(text)}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.titlecontainer}>\r\n        <Text style={styles.modalTitle}>Subject Code</Text>\r\n        <TextInput\r\n          style={styles.modalInput}\r\n          placeholder=\"Enter subject code\"\r\n          value={subjectCode}\r\n          onChangeText={(text) => setSubjectCode(text.replace(/[^a-zA-Z0-9]/g, ''))}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.titlecontainer}>\r\n        <Text style={styles.modalTitle}>Course</Text>\r\n        <Picker\r\n          style={styles.modalInput}\r\n          selectedValue={selectedCourse}\r\n          onValueChange={(itemValue, itemIndex) => setSelectedCourse(itemValue)}\r\n        >\r\n          {courses.map((course, index) => (\r\n            <Picker.Item key={index} label={course} value={course} />\r\n          ))}\r\n        </Picker>\r\n      </View>\r\n\r\n      <View style={styles.titlecontainer}>\r\n        <Text style={styles.modalTitle}>School</Text>\r\n        <Picker\r\n          style={styles.modalInput}\r\n          selectedValue={selectedSchool}\r\n          onValueChange={(itemValue, itemIndex) => setSelectedSchool(itemValue)}\r\n        >\r\n          {schools.map((school, index) => (\r\n            <Picker.Item key={index} label={school} value={school} />\r\n          ))}\r\n        </Picker>\r\n      </View>\r\n\r\n      <View style={styles.titlecontainer}>\r\n        <Text style={styles.modalTitle}>Category</Text>\r\n        <Picker\r\n          style={styles.modalInput}\r\n          selectedValue={selectedCategory}\r\n          onValueChange={(itemValue, itemIndex) => setSelectedCategory(itemValue)}\r\n        >\r\n          {categories.map((category, index) => (\r\n            <Picker.Item key={index} label={category} value={category} />\r\n          ))}\r\n        </Picker>\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={styles.additionalTitle}>If your school is not listed as an option, please request its addition by contacting the administrators at grovecards@gmail.com.</Text>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  CreateContainer: {\r\n    flex: 1,\r\n    justifyContent: 'flex-start',\r\n    resizeMode: 'cover',\r\n  },\r\n  letsGetInto1: {\r\n    top: 20,\r\n    alignSelf: 'center',\r\n    fontSize: 15,\r\n    letterSpacing: 1.6,\r\n    fontWeight: '700',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    height: 33,\r\n  },\r\n  titlecontainer: {\r\n    top: 20,\r\n    padding: 10,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    color: '#ECE3CE',\r\n    paddingBottom: 10,\r\n  },\r\n  modalInput: {\r\n    height: 50,\r\n    borderStyle: 'solid',\r\n    borderColor: '#ece3ce',\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    width: '90%',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 5,\r\n  },\r\n  additionalTitle: {\r\n    fontSize: 20,\r\n    color: '#ECE3CE',\r\n    top: 75,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}