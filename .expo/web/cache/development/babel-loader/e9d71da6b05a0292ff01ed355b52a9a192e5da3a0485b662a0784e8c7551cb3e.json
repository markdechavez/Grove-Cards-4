{"ast":null,"code":"import * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Flashcard from \"../code/flashcards\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function LibrariesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var handleDeckPress = function handleDeckPress(deck) {\n    setSelectedDeck(deck);\n  };\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.backgroundImage,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: _jsx(View, {\n        children: _jsx(FlatList, {\n          data: decks.filter(function (deck) {\n            return deck.added === 'yes';\n          }),\n          horizontal: true,\n          keyExtractor: function keyExtractor(item) {\n            return item.id.toString();\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleDeckPress(item);\n              },\n              children: _jsx(View, {\n                children: _jsx(Text, {\n                  style: styles.deckTitle,\n                  children: item.name\n                })\n              })\n            });\n          }\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: '#ECE3CE',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 5,\n    margin: 14,\n    marginHorizontal: 20\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","FlatList","ImageBackground","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","Flashcard","jsx","_jsx","LibrariesScreen","_ref","navigation","handleDeckPress","deck","setSelectedDeck","source","require","style","styles","backgroundImage","children","contentContainerStyle","scrollContainer","data","decks","filter","added","horizontal","keyExtractor","item","id","toString","renderItem","_ref2","onPress","deckTitle","name","create","flex","resizeMode","justifyContent","flexGrow","backgroundColor","alignItems","container","padding","buttonContainer","flexDirection","marginTop","button","paddingVertical","paddingHorizontal","borderRadius","margin","marginHorizontal","buttonText","fontSize","fontWeight"],"sources":["C:/Users/Mark/learningrn/navigation/screens/LibrariesScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { FlatList, ImageBackground, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport Flashcard from '../code/flashcards';\r\n\r\nexport default function LibrariesScreen({ navigation }) {\r\n\r\n    const handleDeckPress = (deck) => {\r\n        setSelectedDeck(deck);\r\n      };\r\n\r\n    return (\r\n        <ImageBackground source={require('../assets/JungleBg.gif')} style={styles.backgroundImage}>\r\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n\r\n\r\n                <View>\r\n                <FlatList\r\n    data={decks.filter((deck) => deck.added === 'yes')}\r\n    horizontal\r\n    keyExtractor={(item) => item.id.toString()}\r\n    renderItem={({ item }) => (\r\n        <TouchableOpacity onPress={() => handleDeckPress(item)}>\r\n            <View>\r\n                <Text style={styles.deckTitle}>{item.name}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )}\r\n/>\r\n\r\n                </View>\r\n\r\n\r\n\r\n            </ScrollView>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    backgroundImage:{\r\n        flex: 1,\r\n        resizeMode: 'cover', // or 'stretch' or 'contain'\r\n        justifyContent: 'center',\r\n    },\r\n    scrollContainer:{\r\n        flexGrow: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0)', // Set the background color to transparent\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        padding: 20,\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 10, \r\n    },\r\n    button: {\r\n        backgroundColor: '#ECE3CE',\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 5,\r\n        margin: 14,\r\n        marginHorizontal: 20,\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE/B,OAAOC,SAAS;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAE3C,eAAe,SAASC,eAAeA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAEhD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,IAAI,EAAK;IAC9BC,eAAe,CAACD,IAAI,CAAC;EACvB,CAAC;EAEH,OACIL,IAAA,CAACT,eAAe;IAACgB,MAAM,EAAEC,OAAO,yBAAyB,CAAE;IAACC,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,EACtFZ,IAAA,CAACR,UAAU;MAACqB,qBAAqB,EAAEH,MAAM,CAACI,eAAgB;MAAAF,QAAA,EAGtDZ,IAAA,CAACH,IAAI;QAAAe,QAAA,EACLZ,IAAA,CAACV,QAAQ;UACrByB,IAAI,EAAEC,KAAK,CAACC,MAAM,CAAC,UAACZ,IAAI;YAAA,OAAKA,IAAI,CAACa,KAAK,KAAK,KAAK;UAAA,EAAE;UACnDC,UAAU;UACVC,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;UAAA,CAAC;UAC3CC,UAAU,EAAE,SAAAA,WAAAC,KAAA;YAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;YAAA,OACfrB,IAAA,CAACJ,gBAAgB;cAAC8B,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMtB,eAAe,CAACiB,IAAI,CAAC;cAAA,CAAC;cAAAT,QAAA,EACnDZ,IAAA,CAACH,IAAI;gBAAAe,QAAA,EACDZ,IAAA,CAACN,IAAI;kBAACe,KAAK,EAAEC,MAAM,CAACiB,SAAU;kBAAAf,QAAA,EAAES,IAAI,CAACO;gBAAI,CAAO;cAAC,CAC/C;YAAC,CACO,CAAC;UAAA;QACrB,CACL;MAAC,CAEoB;IAAC,CAIC;EAAC,CACA,CAAC;AAE1B;AAEA,IAAMlB,MAAM,GAAGjB,UAAU,CAACoC,MAAM,CAAC;EAC7BlB,eAAe,EAAC;IACZmB,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,OAAO;IACnBC,cAAc,EAAE;EACpB,CAAC;EACDlB,eAAe,EAAC;IACZmB,QAAQ,EAAE,CAAC;IACXC,eAAe,EAAE,kBAAkB;IACnCC,UAAU,EAAE,QAAQ;IACpBH,cAAc,EAAE;EACpB,CAAC;EACDI,SAAS,EAAE;IACPN,IAAI,EAAE,CAAC;IACPK,UAAU,EAAE,YAAY;IACxBH,cAAc,EAAE,YAAY;IAC5BK,OAAO,EAAE;EACb,CAAC;EACDC,eAAe,EAAE;IACbC,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE;EACf,CAAC;EACDC,MAAM,EAAE;IACJP,eAAe,EAAE,SAAS;IAC1BQ,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,CAAC;IACfC,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE;EACtB,CAAC;EACDC,UAAU,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}