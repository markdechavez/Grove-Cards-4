{"ast":null,"code":"import * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Flashcard from \"../code/flashcards\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LibrariesScreen(_ref) {\n  var navigation = _ref.navigation;\n  var filteredDecks = decks.filter(function (deck) {\n    return deck.added === 'yes';\n  });\n  var renderDeckItem = function renderDeckItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(TouchableOpacity, {\n      children: _jsx(View, {\n        children: _jsx(Text, {\n          children: \"item.name\"\n        })\n      })\n    });\n  };\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.backgroundImage,\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [_jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleCreatedButtonPress();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Created\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleFavoriteButtonPress();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Favorite\"\n            })\n          })]\n        })\n      }), _jsx(View, {\n        children: _jsx(FlatList, {\n          data: filteredDecks,\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          renderItem: renderDeckItem,\n          numColumns: 2\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: '#ECE3CE',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 5,\n    margin: 14,\n    marginHorizontal: 20\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","FlatList","ImageBackground","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","Flashcard","jsx","_jsx","jsxs","_jsxs","LibrariesScreen","_ref","navigation","filteredDecks","decks","filter","deck","added","renderDeckItem","_ref2","item","children","source","require","style","styles","backgroundImage","contentContainerStyle","scrollContainer","container","buttonContainer","button","onPress","handleCreatedButtonPress","buttonText","handleFavoriteButtonPress","data","keyExtractor","id","renderItem","numColumns","create","flex","resizeMode","justifyContent","flexGrow","backgroundColor","alignItems","padding","flexDirection","marginTop","paddingVertical","paddingHorizontal","borderRadius","margin","marginHorizontal","fontSize","fontWeight"],"sources":["C:/Users/Mark/learningrn/navigation/screens/LibrariesScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { FlatList, ImageBackground, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\nimport Flashcard from '../code/flashcards';\r\n\r\nexport default function LibrariesScreen({ navigation }) {\r\n\r\n    const filteredDecks = decks.filter(deck => deck.added === 'yes');\r\n    const renderDeckItem = ({ item }) => (\r\n        <TouchableOpacity>\r\n            <View>\r\n                <Text>item.name</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n\r\n\r\n    return (\r\n        <ImageBackground source={require('../assets/JungleBg.gif')} style={styles.backgroundImage}>\r\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n\r\n                <View style={styles.container}>\r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleCreatedButtonPress()}>\r\n                            <Text style={styles.buttonText}>Created</Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleFavoriteButtonPress()}>\r\n                            <Text style={styles.buttonText}>Favorite</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n\r\n                <View>\r\n                <FlatList\r\n                    data = {filteredDecks}\r\n                    keyExtractor={(item) => item.id}\r\n                    renderItem={renderDeckItem}\r\n                    numColumns={2}\r\n                />\r\n                </View>\r\n\r\n\r\n            </ScrollView>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    backgroundImage:{\r\n        flex: 1,\r\n        resizeMode: 'cover', // or 'stretch' or 'contain'\r\n        justifyContent: 'center',\r\n    },\r\n    scrollContainer:{\r\n        flexGrow: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0)', // Set the background color to transparent\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        padding: 20,\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 10, \r\n    },\r\n    button: {\r\n        backgroundColor: '#ECE3CE',\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 5,\r\n        margin: 14,\r\n        marginHorizontal: 20,\r\n    },\r\n    buttonText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}