{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Carousel from 'react-native-snap-carousel';\nimport { SLIDER_WIDTH, ITEM_WIDTH } from \"../code/carouselCardItem\";\nimport { decks } from \"../code/data\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar App = function App(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(decks[0]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedDeck = _useState2[0],\n    setSelectedDeck = _useState2[1];\n  var _React$useState = React.useState(0),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    index = _React$useState2[0],\n    setIndex = _React$useState2[1];\n  var isCarousel = React.useRef(null);\n  var handleDeckPress = function handleDeckPress(deck) {\n    setSelectedDeck(deck);\n  };\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.backgroundImage,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: [styles.l1, {\n            top: 10\n          }],\n          children: \"Hello, there!\"\n        }), _jsx(Text, {\n          style: [styles.l2, {\n            top: 10\n          }],\n          children: \"What do you want to learn today?\"\n        }), _jsxs(View, {\n          style: styles.c2,\n          children: [_jsxs(Text, {\n            style: styles.c2l1,\n            numberOfLines: 2,\n            children: [\"Plant seeds of wisdom \", '\\n', \"one flashcard at a time!\"]\n          }), _jsx(TouchableOpacity, {\n            style: styles.c2l2,\n            children: _jsx(Text, {\n              style: {\n                color: '#ECE3CE'\n              },\n              children: \"Create a study set now!\"\n            })\n          }), _jsx(Image, {\n            style: styles.homechar,\n            source: require(\"../assets/home_char.png\")\n          })]\n        }), decks.map(function (deck, i) {\n          return _jsxs(View, {\n            style: styles.flashcardcontainer,\n            children: [_jsx(Text, {\n              style: [styles.l3, {\n                top: 5 + i * 130\n              }],\n              children: deck.name\n            }), _jsx(Carousel, {\n              layout: \"default\",\n              ref: isCarousel,\n              data: deck.items,\n              renderItem: function renderItem(_ref2) {\n                var item = _ref2.item;\n                return _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return handleDeckPress(item);\n                  },\n                  style: styles.deckContainer,\n                  children: _jsx(Text, {\n                    style: styles.deckTitle,\n                    children: item.name\n                  })\n                });\n              },\n              sliderWidth: SLIDER_WIDTH,\n              itemWidth: ITEM_WIDTH,\n              onSnapToItem: function onSnapToItem(index) {\n                return setIndex(index);\n              },\n              useScrollView: true\n            })]\n          }, i);\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20\n  },\n  l1: {\n    fontSize: 20,\n    color: '#FFFFFF',\n    marginBottom: 5\n  },\n  l2: {\n    fontSize: 12,\n    marginBottom: 15,\n    color: '#FFFFFF'\n  },\n  l3: {\n    fontSize: 14,\n    color: '#ECE3CE',\n    marginLeft: -20,\n    marginBottom: 5\n  },\n  c2: {\n    backgroundColor: '#ECE3CE',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n    padding: 20,\n    position: 'relative'\n  },\n  c2l1: {\n    fontSize: 16,\n    marginRight: 140\n  },\n  c2l2: {\n    backgroundColor: '#4F6F52',\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderRadius: 5,\n    marginTop: 10,\n    alignSelf: 'flex-start'\n  },\n  homechar: {\n    width: 200,\n    height: 220,\n    position: 'absolute',\n    top: -88,\n    left: 168\n  },\n  flashcardcontainer: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20\n  },\n  deckContainer: {\n    width: ITEM_WIDTH,\n    height: ITEM_WIDTH,\n    marginHorizontal: 8,\n    borderRadius: 8,\n    backgroundColor: '#3498db',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  deckTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","useState","ImageBackground","ScrollView","StyleSheet","Text","TouchableOpacity","View","Image","Carousel","SLIDER_WIDTH","ITEM_WIDTH","decks","jsx","_jsx","jsxs","_jsxs","App","_ref","navigation","_useState","_useState2","_slicedToArray","selectedDeck","setSelectedDeck","_React$useState","_React$useState2","index","setIndex","isCarousel","useRef","handleDeckPress","deck","source","require","style","styles","backgroundImage","children","contentContainerStyle","scrollContainer","container","l1","top","l2","c2","c2l1","numberOfLines","c2l2","color","homechar","map","i","flashcardcontainer","l3","name","layout","ref","data","items","renderItem","_ref2","item","onPress","deckContainer","deckTitle","sliderWidth","itemWidth","onSnapToItem","useScrollView","create","flex","resizeMode","justifyContent","flexGrow","backgroundColor","alignItems","padding","fontSize","marginBottom","marginLeft","flexDirection","marginTop","position","marginRight","paddingHorizontal","paddingVertical","borderRadius","alignSelf","width","height","left","marginHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontWeight"],"sources":["C:/Users/Mark/learningrn/navigation/screens/HomeScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  ImageBackground,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n} from 'react-native';\r\n\r\nimport Carousel from 'react-native-snap-carousel';\r\nimport { SLIDER_WIDTH, ITEM_WIDTH } from '../code/carouselCardItem';\r\nimport { decks } from '../code/data';\r\n\r\nconst App = ({ navigation }) => {\r\n  const [selectedDeck, setSelectedDeck] = useState(decks[0]);\r\n  const [index, setIndex] = React.useState(0);\r\n  const isCarousel = React.useRef(null);\r\n\r\n  const handleDeckPress = (deck) => {\r\n    setSelectedDeck(deck);\r\n  };\r\n\r\n  return (\r\n    <ImageBackground source={require('../assets/JungleBg.gif')} style={styles.backgroundImage}>\r\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n        <View style={styles.container}>\r\n\r\n          <Text style={[styles.l1, { top: 10 }]}>Hello, there!</Text>\r\n          <Text style={[styles.l2, { top: 10 }]}>What do you want to learn today?</Text>\r\n\r\n          <View style={styles.c2}>\r\n            <Text style={styles.c2l1} numberOfLines={2}>\r\n              Plant seeds of wisdom {'\\n'}one flashcard at a time!\r\n            </Text>\r\n\r\n            <TouchableOpacity style={styles.c2l2}>\r\n              <Text style={{ color: '#ECE3CE' }}>Create a study set now!</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Image style={styles.homechar} source={require('../assets/home_char.png')} />\r\n          </View>\r\n\r\n          {decks.map((deck, i) => (\r\n            <View key={i} style={styles.flashcardcontainer}>\r\n              <Text style={[styles.l3, { top: 5 + i * 130 }]}>{deck.name}</Text>\r\n              <Carousel\r\n                layout=\"default\"\r\n                ref={isCarousel}\r\n                data={deck.items} // Make sure to replace 'items' with your actual data property\r\n                renderItem={({ item }) => (\r\n                  <TouchableOpacity onPress={() => handleDeckPress(item)} style={styles.deckContainer}>\r\n                    <Text style={styles.deckTitle}>{item.name}</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n                sliderWidth={SLIDER_WIDTH}\r\n                itemWidth={ITEM_WIDTH}\r\n                onSnapToItem={(index) => setIndex(index)}\r\n                useScrollView={true}\r\n              />\r\n            </View>\r\n          ))}\r\n\r\n        </View>\r\n      </ScrollView>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    flex: 1,\r\n    resizeMode: 'cover',\r\n    justifyContent: 'center',\r\n  },\r\n  scrollContainer: {\r\n    flexGrow: 1,\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    padding: 20,\r\n  },\r\n  l1: {\r\n    fontSize: 20,\r\n    color: '#FFFFFF',\r\n    marginBottom: 5,\r\n  },\r\n  l2: {\r\n    fontSize: 12,\r\n    marginBottom: 15,\r\n    color: '#FFFFFF',\r\n  },\r\n  l3: {\r\n    fontSize: 14,\r\n    color: '#ECE3CE',\r\n    marginLeft: -20,\r\n    marginBottom: 5,\r\n  },\r\n  c2: {\r\n    backgroundColor: '#ECE3CE',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginTop: 10,\r\n    padding: 20,\r\n    position: 'relative',\r\n  },\r\n  c2l1: {\r\n    fontSize: 16,\r\n    marginRight: 140,\r\n  },\r\n  c2l2: {\r\n    backgroundColor: '#4F6F52',\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 10,\r\n    borderRadius: 5,\r\n    marginTop: 10,\r\n    alignSelf: 'flex-start',\r\n  },\r\n  homechar: {\r\n    width: 200,\r\n    height: 220,\r\n    position: 'absolute',\r\n    top: -88,\r\n    left: 168,\r\n  },\r\n  flashcardcontainer: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    padding: 20,\r\n  },\r\n  deckContainer: {\r\n    width: ITEM_WIDTH,\r\n    height: ITEM_WIDTH,\r\n    marginHorizontal: 8,\r\n    borderRadius: 8,\r\n    backgroundColor: '#3498db',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  deckTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n});\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}